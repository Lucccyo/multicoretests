;; this prevents the tests from running on a default build
(alias
 (name default)
 (package multicoretests)
 (deps check_error_count.exe atomic_test.exe domain_joingraph.exe
       domain_spawntree.exe lazy_stm_test.exe lazy_lin_test.exe lin_tests.exe
       (alias neg_tests/default)
       (alias domainslib/default)
       (alias lockfree/default)
       (alias queue/default)
       (alias stack/default)
       ;; (alias kcas/default)  -- kcas tests disabled
       ))

;; platform independent helper to help validate non-deterministic output

(executable
 (name check_error_count)
 (modules check_error_count))


;; STM test of Atomic

(executable
 (name atomic_test)
 (modules atomic_test)
 (libraries qcheck STM)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps atomic_test.exe)
 (action (run ./%{deps} --no-colors --verbose)))


;; tests of Domain's spawn functionality (non-STM)

(executable
 (name domain_joingraph)
 (modes native byte)
 (modules domain_joingraph)
 (libraries util qcheck)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (package multicoretests)
 (deps domain_joingraph.exe)
 (action (run ./%{deps} --no-colors --verbose)))

(executable
 (name domain_spawntree)
 (modes native byte)
 (modules domain_spawntree)
 (libraries util qcheck)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (deps domain_spawntree.exe)
 (package multicoretests)
 (action (run ./%{deps} --no-colors --verbose)))


;; Parallel STM and Lin tests of Lazy module

(executable
 (name lazy_stm_test)
 (modules lazy_stm_test)
 (libraries qcheck STM)
 (preprocess (pps ppx_deriving.show)))

(executable
 (name lazy_lin_test)
 (modules lazy_lin_test)
 (libraries qcheck lin)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show)))


;; Linearizability tests, utilizing ppx_deriving_qcheck

(executable
 (name lin_tests)
 (modules lin_tests)
 (flags (:standard -w -27))
 (libraries qcheck lin CList)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show)))

(rule
 (alias runtest)
 (package multicoretests)
 (action
  (progn
   (bash "(./lin_tests.exe --no-colors --verbose || echo 'test run triggered an error') | tee lin-output.txt")
   (run %{bin:check_error_count} "lin_tests" 1 lin-output.txt))))
