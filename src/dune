;; this prevents the tests from running on a default build
(alias
 (name default)
 (deps check_error_count.exe atomic_test.exe domain_joingraph.exe
       domain_spawntree.exe lazy_stm_test.exe lazy_lin_test.exe lin_tests.exe
       (alias neg_tests/default)
       (alias domainslib/default)
       (alias lockfree/default)
       (alias queue/default)
       (alias stack/default)
       ;; (alias kcas/default)  -- kcas tests disabled
       ))

;; platform independent helper to help validate non-deterministic output

(executable
 (name check_error_count)
 (modules check_error_count))


;; STM test of Atomic

(executable
 (name atomic_test)
 (modules atomic_test)
 (libraries util qcheck STM)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (action
   (progn
    (with-stdout-to "atom-output.txt" (run ./atomic_test.exe --no-colors --verbose))
    (cat atom-output.txt)
    (run ./check_error_count.exe "atomic_test" 0 atom-output.txt))))


;; tests of Domain's spawn functionality (non-STM)

(executable
 (name domain_joingraph)
 (modes native byte)
 (modules domain_joingraph)
 (libraries util qcheck)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (deps domain_joingraph.exe)
 (action (run ./%{deps} --no-colors --verbose)))

(executable
 (name domain_spawntree)
 (modes native byte)
 (modules domain_spawntree)
 (libraries util qcheck)
 (preprocess (pps ppx_deriving.show)))

(rule
 (alias runtest)
 (deps domain_spawntree.exe)
 (action (run ./%{deps} --no-colors --verbose)))


;; Parallel STM and Lin tests of Lazy module

(executable
 (name lazy_stm_test)
 (modules lazy_stm_test)
 (libraries util qcheck STM)
 (preprocess (pps ppx_deriving.show)))

(executable
 (name lazy_lin_test)
 (modules lazy_lin_test)
 (libraries util qcheck lin)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show)))


;; Linearizability tests, utilizing ppx_deriving_qcheck

(executable
 (name lin_tests)
 (modules lin_tests)
 (flags (:standard -w -27))
 (libraries util qcheck lin CList)
 (preprocess (pps ppx_deriving_qcheck ppx_deriving.show)))

(rule
 (alias runtest)
 (action
   (progn
    (with-accepted-exit-codes 1
      (with-stdout-to "lin-output.txt" (run ./lin_tests.exe --no-colors --verbose)))
    (cat lin-output.txt)
    (run ./check_error_count.exe "lin_tests" 1 lin-output.txt))))
